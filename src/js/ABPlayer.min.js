function isMobile() {
	var e = !1;
	return function(t) {
		(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0, 4))) && (e = !0)
	}(navigator.userAgent || navigator.vendor || window.opera), e
}
function CommentLoader(e, t, n) {
	null == n && (n = function() {});
	var a = null;
	a = window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP"), a.open("GET", e, !0), a.send();
	var i = t;
	a.onreadystatechange = function() {
		if (4 == a.readyState && 200 == a.status) if ("Microsoft Internet Explorer" == navigator.appName) {
			var e = new ActiveXObject("Microsoft.XMLDOM");
			e.async = !1, e.loadXML(a.responseText), i.load(BilibiliParser(e)), n()
		} else i.load(BilibiliParser(a.responseXML)), n()
	}
}
function createCORSRequest(e, t) {
	var n = new XMLHttpRequest;
	return "withCredentials" in n ? n.open(e, t, !0) : "undefined" != typeof XDomainRequest ? (n = new XDomainRequest, n.open(e, t)) : n = null, n
}
var ABP = {
	version: "0.8.0"
};
!
function() {
	"use strict";

	function e(e) {
		return e.replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
	}
	if (ABP) {
		var t = function(e) {
				return document.getElementById(e)
			},
			n = function(e, t, n, a) {
				var i = null;
				if ("text" === e) return document.createTextNode(t);
				i = document.createElement(e);
				for (var o in t) if ("style" !== o && "className" !== o) i.setAttribute(o, t[o]);
				else if ("className" === o) i.className = t[o];
				else for (var l in t.style) i.style[l] = t.style[l];
				if (n) for (var s = 0; s < n.length; s++) null != n[s] && i.appendChild(n[s]);
				return a && "function" == typeof a && a(i), i
			},
			a = function(e, t) {
				for (; e; e = e.parentNode) if (m(e.parentNode, t)) return e
			};
		HTMLElement.prototype.tooltip = function(e) {
			this.tooltipData = e, this.dispatchEvent(new Event("updatetooltip"))
		}, "undefined" == typeof HTMLElement.prototype.requestFullScreen && (HTMLElement.prototype.requestFullScreen = function() {
			this.webkitRequestFullscreen ? this.webkitRequestFullscreen() : this.mozRequestFullScreen ? this.mozRequestFullScreen() : this.msRequestFullscreen && this.msRequestFullscreen()
		}), "undefined" == typeof document.isFullScreen && (document.isFullScreen = function() {
			return document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenEnabled
		}), "undefined" == typeof document.exitFullscreen && (document.exitFullscreen = function() {
			document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : msExitFullscreen && msExitFullscreen()
		});
		var i = function(e, t) {
				for (var n = "", a = 1; a <= t - (e + "").length; a++) n += "0";
				return n + e
			},
			o = function(e, t) {
				for (var n = "", a = 1; a <= t - (e + "").length; a++) n += "0";
				return n + e
			},
			l = function(e, t) {
				if (0 == e) return lang.oneDay;
				var n, a, i, o, l, s, r = new Date(1e3 * parseInt(e));
				return n = String(r.getFullYear()), a = String(r.getMonth() + 1), 1 == a.length && (a = "0" + a), i = String(r.getDate()), 1 == i.length && (i = "0" + i), o = String(r.getHours()), 1 == o.length && (o = "0" + o), l = String(r.getMinutes()), 1 == l.length && (l = "0" + l), s = String(r.getSeconds()), 1 == s.length && (s = "0" + s), String(t ? a + "-" + i + " " + o + ":" + l : n + "-" + a + "-" + i + " " + o + ":" + l + ":" + s)
			},
			o = function(e) {
				return i(parseInt(e / 60), 2) + ":" + i(parseInt(e % 60), 2)
			},
			s = function(e) {
				for (var t = e.split(":"), n = 0, a = 0; a < t.length; a++) {
					n *= 60;
					var i = parseInt(t[a]);
					if (isNaN(i) || 0 > i) return !1;
					n += i
				}
				return n
			},
			r = function(i, o, l) {
				i && (i.addEventListener("mousemove", function(e) {
					var s = t("ABP-Tooltip"),
						r = i.clientWidth,
						c = i.clientHeight,
						m = i.getBoundingClientRect(),
						d = a(i, "ABP-Unit").getBoundingClientRect(),
						u = m.top - d.top,
						p = o ? e.x - d.left : m.left - d.left;
					null == s && (s = n("div", {
						id: "ABP-Tooltip"
					}, [n("text", i.tooltipData)]), s.by = i, a(i, "ABP-Unit").appendChild(s), s.style.top = u + c + 2 + "px", s.style.left = p + r / 2 - s.clientWidth / 2 + "px"), o && (s.style.left = p - s.clientWidth / 2 + "px"), l && (s.style.top = u - s.clientHeight + 2 + l + "px")
				}), i.addEventListener("mouseout", function() {
					var e = t("ABP-Tooltip");
					e && e.parentNode && e.parentNode.removeChild(e)
				}), i.addEventListener("updatetooltip", function(n) {
					var a = t("ABP-Tooltip");
					a && a.by == n.srcElement && (a.innerHTML = e(i.tooltipData))
				}))
			},
			c = function(e, t) {
				if (null != e) {
					var n = e.className.split(" ");
					"" == n[0] && (n = []), n.indexOf(t) < 0 && n.push(t), e.className = n.join(" ")
				}
			},
			m = function(e, t) {
				if (null == e) return !1;
				var n = e.className.split(" ");
				return "" == n[0] && (n = []), n.indexOf(t) >= 0
			},
			d = function(e, t) {
				if (null != e) {
					var n = e.className.split(" ");
					"" == n[0] && (n = []), n.indexOf(t) >= 0 && n.splice(n.indexOf(t), 1), e.className = n.join(" ")
				}
			},
			u = function(e, t) {
				var n = {};
				for (var a in t) n[a] = e && "undefined" != typeof e[a] ? e[a] : t[a];
				return n
			};
		ABP.create = function(e, a) {
			var i = e;
			if (a || (a = {}), a = u(a, {
				replaceMode: !0,
				width: 512,
				height: 384,
				src: "",
				mobile: !1
			}), "string" == typeof e && (i = t(e)), m(i, "ABP-Unit")) o = i;
			else {
				var o = n("div", {
					className: "ABP-Unit",
					style: {
						width: a.width.toString().indexOf("%") >= 0 ? a.width : a.width + "px",
						height: a.height.toString().indexOf("%") >= 0 ? a.height : a.height + "px"
					}
				});
				i.appendChild(o)
			}
			o.children.length > 0 && a.replaceMode && (o.innerHTML = "");
			var l = [],
				s = [];
			if ("string" == typeof a.src) a.src = n("video", {
				autobuffer: "true",
				dataSetup: "{}"
			}, [n("source", {
				src: a.src
			})]), l.push(a.src);
			else if (a.src.hasOwnProperty("playlist")) for (var r = a.src, c = r.playlist, d = 0; d < c.length; d++) {
				if (c[d].hasOwnProperty("sources")) {
					var p = [];
					for (var v in c[d].sources) p.push(n("source", {
						src: c[d][v],
						type: v
					}));
					l.push(n("video", {
						autobuffer: "true",
						dataSetup: "{}"
					}, p))
				} else c[d].hasOwnProperty("video") ? l.push(c[d].video) : console.log("No recognized format");
				s.push(c[d].comments)
			} else l.push(a.src);
			o.appendChild(n("div", {
				className: "ABP-Player"
			}, [n("div", {
				className: "ABP-Video",
				tabindex: "10"
			}, [n("div", {
				className: "ABP-Container"
			}), l[0]]), n("div", {
				className: "ABP-Text"
			}, [n("div", {
				className: "ABP-CommentStyle"
			}, [n("div", {
				className: "button ABP-Comment-Font icon-font-style"
			}), n("div", {
				className: "button ABP-Comment-Color icon-color-mode"
			})]), n("input", {
				value: "哔哩哔哩助手 HTML5 播放器即将支持弹幕发送功能，敬请期待",
				disabled: "disabled"
			}), n("div", {
				className: "ABP-Comment-Send"
			}, [n("text", "发送")])]), n("div", {
				className: "ABP-Control"
			}, [n("div", {
				className: "button ABP-Play icon-play"
			}), n("div", {
				className: "progress-bar"
			}, [n("div", {
				className: "bar"
			}, [n("div", {
				className: "load"
			}), n("div", {
				className: "dark"
			})])]), n("div", {
				className: "time-label"
			}, [n("text", "00:00 / 00:00")]), n("div", {
				className: "button ABP-Volume icon-volume-high"
			}), n("div", {
				className: "volume-bar"
			}, [n("div", {
				className: "bar"
			}, [n("div", {
				className: "load"
			})])]), n("div", {
				className: "button-group ABP-CommentGroup"
			}, [n("div", {
				className: "button ABP-CommentShow icon-comment on"
			}), n("div", {
				className: "ABP-CommentOption"
			}, [n("p", {
				className: "label"
			}, [n("text", "弹幕不透明度")]), n("div", {
				className: "opacity-bar"
			}, [n("div", {
				className: "bar"
			}, [n("div", {
				className: "load"
			})])])])]), n("div", {
				className: "button ABP-Loop icon-loop"
			}), n("div", {
				className: "button ABP-WideScreen icon-tv"
			}), n("div", {
				className: "button-group ABP-FullScreenGroup"
			}, [n("div", {
				className: "button ABP-FullScreen icon-screen-full"
			}), n("div", {
				className: "button ABP-Web-FullScreen icon-screen"
			})])])])), o.appendChild(n("div", {
				className: "ABP-Comment-List"
			}, [n("div", {
				className: "ABP-Comment-List-Title"
			}, [n("div", {
				className: "time"
			}, [n("text", "时间")]), n("div", {
				className: "content"
			}, [n("text", "评论")]), n("div", {
				className: "date"
			}, [n("text", " 发送日期")])]), n("div", {
				className: "ABP-Comment-List-Container"
			}, [n("ul", {
				className: "ABP-Comment-List-Container-Inner"
			})])]));
			var f = ABP.bind(o, a.mobile);
			if (l.length > 0) {
				var h = l[0];
				f.gotoNext = function() {
					var e = l.indexOf(h) + 1;
					if (e < l.length) {
						h = l[e], h.style.display = "";
						var t = f.video.parentNode;
						t.removeChild(f.video), t.appendChild(h), f.video.style.display = "none", f.video = h, f.swapVideo(h), h.addEventListener("ended", function() {
							f.gotoNext()
						})
					}
					e < s.length && null !== s[e] && CommentLoader(s[e], f.cmManager)
				}, h.addEventListener("ended", function() {
					f.gotoNext()
				}), CommentLoader(s[0], f.cmManager)
			}
			return f
		}, ABP.load = function() {}, ABP.bind = function(e, t, a) {
			var i = {
				playerUnit: e,
				btnPlay: null,
				barTime: null,
				barLoad: null,
				barTimeHitArea: null,
				barVolume: null,
				barVolumeHitArea: null,
				barOpacity: null,
				barOpacityHitArea: null,
				btnFont: null,
				btnColor: null,
				btnSend: null,
				controlBar: null,
				timeLabel: null,
				timeJump: null,
				divComment: null,
				btnWide: null,
				btnFull: null,
				btnWebFull: null,
				btnDm: null,
				btnLoop: null,
				videoDiv: null,
				btnVolume: null,
				video: null,
				divTextField: null,
				txtText: null,
				cmManager: null,
				commentList: null,
				commentListContainer: null,
				lastSelectedComment: null,
				commentScale: .9,
				defaults: {
					w: 0,
					h: 0
				},
				state: u(a, {
					fullscreen: !1,
					commentVisible: !0,
					allowRescale: !1,
					autosize: !1
				}),
				createPopup: function(t, a) {
					if (e.hasPopup === !0) return !1;
					var i = n("div", {
						className: "ABP-Popup"
					}, [n("text", t)]);
					return i.remove = function() {
						i.isRemoved || (i.isRemoved = !0, e.removeChild(i), e.hasPopup = !1)
					}, e.appendChild(i), e.hasPopup = !0, "number" == typeof a && setTimeout(function() {
						i.remove()
					}, a), i
				},
				removePopup: function() {
					for (var t = e.getElementsByClassName("ABP-Popup"), n = 0; n < t.length; n++) null != t[n].remove ? t[n].remove() : t[n].parentNode.removeChild(t[n]);
					e.hasPopup = !1
				},
				loadCommentList: function(e, t) {
					t = "asc" == t ? -1 : 1;
					var a = Object.keys(i.commentList).sort(function(n, a) {
						return i.commentList[n][e] < i.commentList[a][e] ? t : i.commentList[n][e] > i.commentList[a][e] ? -t : 0
					});
					i.commentObjArray = [];
					for (f in a) {
						var s = a[f],
							c = i.commentList[s];
						if (c && c.time) {
							var m = n("li", {}),
								d = n("span", {
									className: "time"
								}, [n("text", o(c.time / 1e3))]),
								u = n("span", {
									className: "content"
								}, [n("text", c.content)]),
								p = n("span", {
									className: "date"
								}, [n("text", l(c.date, !0))]);
							r(u, !1, 36), r(p, !1, 18), u.tooltip(c.content), p.tooltip(l(c.date)), m.appendChild(d), m.appendChild(u), m.appendChild(p), m.data = c, m.addEventListener("dblclick", function() {
								i.video.currentTime = this.data.time / 1e3, q(v.currentTime)
							}), i.commentObjArray.push(m)
						}
					}
					i.commentListContainer.style.height = 24 * i.commentObjArray.length + "px", i.renderCommentList()
				},
				renderCommentList: function() {
					var e = i.commentListContainer.parentElement.scrollTop,
						t = parseInt(e / 24);
					i.commentListContainer.innerHTML = "";
					for (var n = t; t + 40 >= n && "undefined" != typeof i.commentObjArray[n]; n++) {
						if (n == t && n > 0) {
							var a = i.commentObjArray[n].cloneNode(!0);
							a.style.paddingTop = 24 * t + "px"
						} else var a = i.commentObjArray[n];
						i.commentListContainer.appendChild(a)
					}
					i.commentListContainer.parentElement.scrollTop = e
				},
				swapVideo: null
			};
			if (i.swapVideo = function(t) {
				t.addEventListener("timeupdate", function() {
					I || q(t.currentTime)
				}), t.addEventListener("ended", function() {
					i.btnPlay.className = "button ABP-Play icon-play", i.barTime.style.width = "0%"
				}), t.addEventListener("progress", function() {
					if (null != this.buffered) {
						try {
							var e = (this.buffered.start(0), this.buffered.end(0))
						} catch (t) {
							return
						}
						var n = this.duration,
							a = e / n * 100;
						i.barLoad.style.width = a + "%"
					}
				}), t.addEventListener("loadedmetadata", function() {
					if (null != this.buffered) {
						try {
							var e = (this.buffered.start(0), this.buffered.end(0))
						} catch (t) {
							return
						}
						var n = this.duration,
							a = e / n * 100;
						i.barLoad.style.width = a + "%"
					}
				}), t.isBound = !0;
				var n = 0;
				i.cmManager && (i.cmManager.options.scrollScale = 1.3, i.cmManager.options.opacity = .8, i.cmManager.addEventListener("load", function() {
					i.commentList = {};
					for (f in i.cmManager.timeline) {
						var e = i.cmManager.timeline[f];
						i.commentList[e.dbid] = {
							date: e.date,
							time: e.stime,
							mode: e.mode,
							user: e.hash,
							pool: e.pool,
							content: e.text
						}
					}
					i.loadCommentList("date", "asc"), i.commentListContainer.parentElement.addEventListener("scroll", i.renderCommentList)
				}), i.cmManager.setBounds = function() {
					var t = i.videoDiv.offsetWidth,
						n = i.videoDiv.offsetHeight,
						a = n / 438 * i.commentScale;
					e.offsetHeight <= 300 || e.offsetWidth <= 700 ? c(e, "ABP-Mini") : d(e, "ABP-Mini"), this.width = t / a, this.height = 438 / i.commentScale, this.dispatchEvent("resize");
					for (var o in this.csa) this.csa[o].setBounds(this.width, this.height);
					this.stage.style.width = t / a + "px", this.stage.style.height = 438 / i.commentScale + "px", this.stage.style.perspective = this.width * Math.tan(40 * Math.PI / 180) / 2 + "px", this.stage.style.webkitPerspective = this.width * Math.tan(40 * Math.PI / 180) / 2 + "px", this.stage.style.transform = "scale(" + a + ")", this.stage.style.webkitTransform = "scale(" + a + ")"
				}, i.cmManager.setBounds(), i.cmManager.clear(), t.addEventListener("progress", function() {
					n == t.currentTime ? (t.hasStalled = !0, i.cmManager.stopTimer()) : n = t.currentTime
				}), window && window.addEventListener("resize", function() {
					i.cmManager.setBounds()
				}), t.addEventListener("timeupdate", function() {
					i.cmManager.display !== !1 && (t.hasStalled && (i.cmManager.startTimer(), t.hasStalled = !1), i.cmManager.time(Math.floor(1e3 * t.currentTime)))
				}), t.addEventListener("play", function() {
					i.cmManager.setBounds(), i.cmManager.startTimer();
					try {
						var e = this.buffered.end(0),
							t = this.duration,
							n = e / t * 100;
						i.barLoad.style.width = n + "%"
					} catch (a) {}
				}), t.addEventListener("ratechange", function() {
					null != i.cmManager.options.globalScale && 0 !== t.playbackRate && (i.cmManager.options.globalScale = 1 / t.playbackRate, i.cmManager.rescale())
				}), t.addEventListener("pause", function() {
					i.cmManager.stopTimer()
				}), t.addEventListener("waiting", function() {
					i.cmManager.stopTimer()
				}), t.addEventListener("playing", function() {
					i.cmManager.startTimer()
				}))
			}, null !== e && null !== e.getElementsByClassName) {
				i.defaults.w = e.offsetWidth, i.defaults.h = e.offsetHeight;
				var p = e.getElementsByClassName("ABP-Video");
				if (!(p.length <= 0)) {
					var v = null;
					i.videoDiv = p[0];
					for (var f in p[0].children) if (null != p[0].children[f].tagName && "VIDEO" === p[0].children[f].tagName.toUpperCase()) {
						v = p[0].children[f];
						break
					}
					p[0] && t && (p[0].style.bottom = "0px");
					var h = p[0].getElementsByClassName("ABP-Container");
					if (h.length > 0 && (i.divComment = h[0]), null !== v) {
						i.video = v;
						var g = e.getElementsByClassName("ABP-Play");
						if (!(g.length <= 0)) {
							i.btnPlay = g[0], i.btnPlay.tooltip("播放"), r(i.btnPlay);
							var b = e.getElementsByClassName("progress-bar");
							if (!(b.length <= 0)) {
								var y = b[0].getElementsByClassName("bar");
								i.barTimeHitArea = y[0], i.barLoad = y[0].getElementsByClassName("load")[0], i.barTime = y[0].getElementsByClassName("dark")[0];
								var B = e.getElementsByClassName("time-label");
								if (!(B.length <= 0)) {
									i.timeLabel = B[0];
									var M = e.getElementsByClassName("ABP-Volume");
									if (!(M.length <= 0)) {
										i.btnVolume = M[0], i.btnVolume.tooltip("静音"), r(i.btnVolume);
										var P = e.getElementsByClassName("volume-bar");
										if (!(P.length <= 0)) {
											var w = P[0].getElementsByClassName("bar");
											i.barVolumeHitArea = w[0], i.barVolume = w[0].getElementsByClassName("load")[0];
											var C = e.getElementsByClassName("opacity-bar");
											if (!(C.length <= 0)) {
												var C = C[0].getElementsByClassName("bar");
												i.barOpacityHitArea = C[0], i.barOpacity = C[0].getElementsByClassName("load")[0];
												var A = e.getElementsByClassName("ABP-FullScreen");
												if (!(A.length <= 0)) {
													i.btnFull = A[0], i.btnFull.tooltip("浏览器全屏"), r(i.btnFull);
													var N = e.getElementsByClassName("ABP-Web-FullScreen");
													if (!(N.length <= 0)) {
														i.btnWebFull = N[0], i.btnWebFull.tooltip("网页全屏"), r(i.btnWebFull);
														var L = e.getElementsByClassName("ABP-WideScreen");
														if (!(L.length <= 0)) {
															i.btnWide = L[0], i.btnWide.tooltip("宽屏模式"), r(i.btnWide);
															var E = e.getElementsByClassName("ABP-Comment-Font");
															if (!(E.length <= 0)) {
																i.btnFont = E[0], i.btnFont.tooltip("弹幕样式"), r(i.btnFont);
																var x = e.getElementsByClassName("ABP-Comment-Color");
																if (!(x.length <= 0)) {
																	i.btnColor = x[0], i.btnColor.tooltip("弹幕颜色"), r(i.btnColor);
																	var T = e.getElementsByClassName("ABP-Text");
																	if (T.length > 0) {
																		i.divTextField = T[0];
																		var k = T[0].getElementsByTagName("input");
																		k.length > 0 && (i.txtText = k[0])
																	}
																	var S = e.getElementsByClassName("ABP-Comment-List-Container-Inner");
																	if (!(S.length <= 0)) {
																		i.commentListContainer = S[0];
																		var F = e.getElementsByClassName("ABP-Comment-Send");
																		if (!(F.length <= 0)) {
																			i.btnSend = F[0], i.btnSend.tooltip("毁灭地喷射白光!da!"), r(i.btnSend);
																			var H = e.getElementsByClassName("ABP-Control");
																			H.length > 0 && (i.controlBar = H[0]);
																			var O = e.getElementsByClassName("ABP-CommentShow");
																			if (!(O.length <= 0)) {
																				i.btnDm = O[0], i.btnDm.tooltip("隐藏弹幕"), r(i.btnDm);
																				var V = e.getElementsByClassName("ABP-Loop");
																				if (!(V.length <= 0)) {
																					if (i.btnLoop = V[0], i.btnLoop.tooltip("洗脑循环 off"), r(i.btnLoop), "undefined" != typeof CommentManager && (i.cmManager = new CommentManager(i.divComment), i.cmManager.display = !0, i.cmManager.init(), i.cmManager.clear(), window && window.addEventListener("resize", function() {
																						i.cmManager.setBounds()
																					})), t) {
																						var W = -1,
																							R = function() {
																								i.controlBar.style.display = "none", i.divTextField.style.display = "none", i.divComment.style.bottom = "0px", i.cmManager.setBounds()
																							};
																						i.divComment.style.bottom = i.controlBar.offsetHeight + i.divTextField.offsetHeight + "px";
																						var D = function() {
																								i.controlBar.style.display = "", i.divTextField.style.display = "", i.divComment.style.bottom = i.controlBar.offsetHeight + i.divTextField.offsetHeight + "px";
																								try {
																									-1 != W && (clearInterval(W), W = -1), W = setInterval(function() {
																										document.activeElement !== i.txtText && (R(), clearInterval(W), W = -1)
																									}, 2500)
																								} catch (e) {
																									console.log(e)
																								}
																							};
																						e.addEventListener("touchmove", D), e.addEventListener("mousemove", D), W = setTimeout(function() {
																							R()
																						}, 4e3)
																					}
																					if (v.isBound !== !0) {
																						i.swapVideo(v), i.videoDiv.addEventListener("click", function(e) {
																							i.btnPlay.click(), e.preventDefault()
																						}), i.btnVolume.addEventListener("click", function() {
																							0 == i.video.muted ? (i.video.muted = !0, this.className = "button ABP-Volume icon-volume-mute2", this.tooltip("取消静音"), i.barVolume.style.width = "0%") : (i.video.muted = !1, this.className = "button ABP-Volume icon-volume-", this.className += i.video.volume < .1 ? "mute" : i.video.volume < .33 ? "low" : i.video.volume < .67 ? "medium" : "high", this.tooltip("静音"), i.barVolume.style.width = 100 * i.video.volume + "%")
																						}), i.btnWebFull.addEventListener("click", function() {
																							i.state.fullscreen = m(e, "ABP-FullScreen"), c(e, "ABP-FullScreen"), i.btnFull.className = "button ABP-FullScreen icon-screen-normal", i.btnFull.tooltip("退出网页全屏"), i.state.fullscreen = !0, i.cmManager && i.cmManager.setBounds(), i.state.allowRescale && (i.state.fullscreen ? i.defaults.w > 0 && (i.cmManager.options.scrollScale = e.offsetWidth / i.defaults.w) : i.cmManager.options.scrollScale = 1)
																						});
																						var z = function() {
																								!document.isFullScreen() && m(e, "ABP-FullScreen") && (d(e, "ABP-FullScreen"), this.className = "button ABP-FullScreen icon-screen-full", this.tooltip("浏览器全屏"))
																							};
																						document.addEventListener("fullscreenchange", z, !1), document.addEventListener("webkitfullscreenchange", z, !1), document.addEventListener("mozfullscreenchange", z, !1), document.addEventListener("MSFullscreenChange", z, !1), i.btnFull.addEventListener("click", function() {
																							i.state.fullscreen = m(e, "ABP-FullScreen"), i.state.fullscreen ? (d(e, "ABP-FullScreen"), this.className = "button ABP-FullScreen icon-screen-full", this.tooltip("浏览器全屏"), document.exitFullscreen()) : (c(e, "ABP-FullScreen"), this.className = "button ABP-FullScreen icon-screen-normal", this.tooltip("退出全屏"), e.requestFullScreen()), i.state.fullscreen = !i.state.fullscreen, i.cmManager && i.cmManager.setBounds(), i.state.allowRescale && (i.state.fullscreen ? i.defaults.w > 0 && (i.cmManager.options.scrollScale = e.offsetWidth / i.defaults.w) : i.cmManager.options.scrollScale = 1)
																						}), i.btnWide.addEventListener("click", function() {
																							i.state.widescreen = m(e, "ABP-WideScreen"), i.state.widescreen ? (d(e, "ABP-WideScreen"), this.className = "button ABP-WideScreen icon-tv", e.dispatchEvent(new Event("normal")), this.tooltip("宽屏模式")) : (c(e, "ABP-WideScreen"), this.className = "button ABP-WideScreen icon-tv on", e.dispatchEvent(new Event("wide")), this.tooltip("退出宽屏")), i.state.widescreen = !i.state.widescreen, i.cmManager && i.cmManager.setBounds(), i.state.allowRescale && (i.state.fullscreen ? i.defaults.w > 0 && (i.cmManager.options.scrollScale = e.offsetWidth / i.defaults.w) : i.cmManager.options.scrollScale = 1)
																						}), i.btnDm.addEventListener("click", function() {
																							0 == i.cmManager.display ? (i.cmManager.display = !0, i.cmManager.startTimer(), this.className = "button ABP-CommentShow icon-comment on", this.tooltip("隐藏弹幕")) : (i.cmManager.display = !1, i.cmManager.clear(), i.cmManager.stopTimer(), this.className = "button ABP-CommentShow icon-comment", this.tooltip("显示弹幕"))
																						}), i.btnLoop.addEventListener("click", function() {
																							0 == i.video.loop ? (i.video.loop = !0, this.className = "button ABP-Loop icon-loop on", this.tooltip("洗脑循环 on")) : (i.video.loop = !1, this.className = "button ABP-Loop icon-loop", this.tooltip("洗脑循环 off"))
																						}), i.timeLabel.addEventListener("click", function() {
																							i.timeJump = n("input", {
																								className: "time-jump"
																							}), i.timeJump.value = o(i.video.currentTime), i.controlBar.appendChild(i.timeJump), i.timeJump.addEventListener("blur", function() {
																								i.timeJump && i.timeJump.parentNode.removeChild(i.timeJump), i.timeJump = null
																							}), i.timeJump.addEventListener("keydown", function(e) {
																								if (13 == e.keyCode) {
																									var t = s(i.timeJump.value);
																									t && t <= i.video.duration && (i.video.currentTime = t, i.video.paused && i.btnPlay.click()), i.timeJump.parentNode.removeChild(i.timeJump)
																								} else(e.keyCode < 48 || e.keyCode > 58) && 8 != e.keyCode && 37 != e.keyCode && 39 != e.keyCode && 46 != e.keyCode && e.preventDefault()
																							}), i.timeJump.focus(), i.timeJump.select()
																						}), i.barTime.style.width = "0%";
																						var I = !1;
																						i.barTimeHitArea.addEventListener("mousedown", function() {
																							I = !0
																						}), document.addEventListener("mouseup", function(e) {
																							if (I) {
																								var t = (e.x - i.barTimeHitArea.getBoundingClientRect().left) / i.barTimeHitArea.offsetWidth * i.video.duration;
																								0 > t && (t = 0), Math.abs(t - i.video.currentTime) > 4 && i.cmManager && i.cmManager.clear(), i.video.currentTime = t
																							}
																							I = !1
																						});
																						var q = function(e) {
																								i.barTime.style.width = e / v.duration * 100 + "%", i.timeLabel.innerHTML = o(e) + " / " + o(v.duration)
																							};
																						document.addEventListener("mousemove", function(e) {
																							var t = (e.x - i.barTimeHitArea.getBoundingClientRect().left) / i.barTimeHitArea.offsetWidth * i.video.duration;
																							0 > t && (t = 0), t > i.video.duration && (t = i.video.duration), i.barTimeHitArea.tooltip(o(t)), I && q(t)
																						}), r(i.barTimeHitArea, !0, -12);
																						var j = !1;
																						i.barVolumeHitArea.addEventListener("mousedown", function() {
																							j = !0
																						}), i.barVolume.style.width = 100 * i.video.volume + "%";
																						var J = function(e) {
																								i.barVolume.style.width = 100 * e + "%", i.video.muted = !1, i.btnVolume.className = "button ABP-Volume icon-volume-", i.btnVolume.className += .1 > e ? "mute" : .33 > e ? "low" : .67 > e ? "medium" : "high", i.btnVolume.tooltip("静音"), i.barVolumeHitArea.tooltip(parseInt(100 * e) + "%")
																							};
																						document.addEventListener("mouseup", function(e) {
																							if (j) {
																								var t = (e.x - i.barVolumeHitArea.getBoundingClientRect().left) / i.barVolumeHitArea.offsetWidth;
																								0 > t && (t = 0), t > 1 && (t = 1), i.video.volume = t, J(i.video.volume)
																							}
																							j = !1
																						}), document.addEventListener("mousemove", function(e) {
																							var t = (e.x - i.barVolumeHitArea.getBoundingClientRect().left) / i.barVolumeHitArea.offsetWidth;
																							0 > t && (t = 0), t > 1 && (t = 1), j ? (i.video.volume = t, J(i.video.volume)) : i.barVolumeHitArea.tooltip(parseInt(100 * t) + "%")
																						}), r(i.barVolumeHitArea, !0, -12);
																						var X = !1;
																						i.barOpacityHitArea.addEventListener("mousedown", function() {
																							X = !0
																						}), i.barOpacity.style.width = 100 * i.cmManager.options.opacity + "%";
																						var U = function(e) {
																								i.barOpacity.style.width = 100 * e + "%", i.barOpacityHitArea.tooltip(parseInt(100 * e) + "%")
																							};
																						document.addEventListener("mouseup", function(e) {
																							if (X) {
																								var t = (e.x - i.barOpacityHitArea.getBoundingClientRect().left) / i.barOpacityHitArea.offsetWidth;
																								0 > t && (t = 0), t > 1 && (t = 1), i.cmManager.options.opacity = t, U(i.cmManager.options.opacity)
																							}
																							X = !1
																						}), document.addEventListener("mousemove", function(e) {
																							var t = (e.x - i.barOpacityHitArea.getBoundingClientRect().left) / i.barOpacityHitArea.offsetWidth;
																							0 > t && (t = 0), t > 1 && (t = 1), X ? (i.cmManager.options.opacity = t, U(i.cmManager.options.opacity)) : i.barOpacityHitArea.tooltip(parseInt(100 * t) + "%")
																						}), r(i.barOpacityHitArea, !0, -6), i.btnPlay.addEventListener("click", function() {
																							i.video.paused ? (i.video.play(), this.className = "button ABP-Play ABP-Pause icon-pause", this.tooltip("暂停")) : (i.video.pause(), this.className = "button ABP-Play icon-play", this.tooltip("播放"))
																						}), e.addEventListener("keydown", function(e) {
																							if (e && document.activeElement !== i.txtText && document.activeElement !== i.timeJump) switch (e.preventDefault(), e.keyCode) {
																							case 32:
																								i.btnPlay.click();
																								break;
																							case 37:
																								var t = i.video.currentTime -= 5;
																								i.cmManager.clear(), 0 > t && (t = 0), i.video.currentTime = t.toFixed(3), i.video.paused && i.btnPlay.click(), q(v.currentTime), i.barTimeHitArea.tooltip(o(v.currentTime));
																								break;
																							case 39:
																								var t = i.video.currentTime += 5;
																								i.cmManager.clear(), t > i.video.duration && (t = i.video.duration), i.video.currentTime = t.toFixed(3), i.video.paused && i.btnPlay.click(), q(v.currentTime), i.barTimeHitArea.tooltip(o(v.currentTime));
																								break;
																							case 38:
																								var n = i.video.volume + .1;
																								n > 1 && (n = 1), i.video.volume = n.toFixed(3), J(i.video.volume);
																								break;
																							case 40:
																								var n = i.video.volume - .1;
																								0 > n && (n = 0), i.video.volume = n.toFixed(3), J(i.video.volume)
																							}
																						}), e.addEventListener("touchmove", function() {
																							event.preventDefault()
																						});
																						var Y = null;
																						e.addEventListener("touchstart", function(e) {
																							e.targetTouches.length > 0 && (Y = e.targetTouches[0])
																						}), e.addEventListener("touchend", function(e) {
																							if (e.changedTouches.length > 0 && null != Y) {
																								var t = e.changedTouches[0].pageX - Y.pageX,
																									n = e.changedTouches[0].pageY - Y.pageY;
																								if (Math.abs(t) < 20 && Math.abs(n) < 20) return void(Y = null);
																								Math.abs(t) > 3 * Math.abs(n) ? t > 0 ? i.video.paused && i.btnPlay.click() : i.video.paused || i.btnPlay.click() : Math.abs(n) > 3 * Math.abs(t) && (i.video.volume = 0 > n ? Math.min(1, i.video.volume + .1) : Math.max(0, i.video.volume - .1)), Y = null
																							}
																						}), e.addEventListener("mouseup", function() {
																							if (document.activeElement != i.txtText && document.activeElement != i.timeJump) {
																								var e = window.scrollY;
																								i.videoDiv.focus(), window.scrollTo(window.scrollX, e)
																							}
																						})
																					}
																					if (null !== i.txtText && i.txtText.addEventListener("keyup", function(e) {
																						if (null != this.value) if (this.style.color = /^!/.test(this.value) ? "#5DE534" : "", null != e && 13 === e.keyCode) {
																							if ("" == this.value) return;
																							if (/^!/.test(this.value)) {
																								var t = this.value.substring(1).split(":"),
																									n = t.shift();
																								switch (n) {
																								case "help":
																									{
																										i.createPopup("提示信息：", 2e3)
																									}
																									break;
																								case "speed":
																								case "rate":
																								case "spd":
																									if (t.length < 1) i.createPopup("速度调节：输入百分比【 1% - 300% 】", 2e3);
																									else {
																										var a = parseInt(t[0]);
																										if (0 / 0 != a) {
																											var o = Math.min(Math.max(a, 1), 300);
																											i.video.playbackRate = o / 100
																										}
																										null !== i.cmManager && i.cmManager.clear()
																									}
																									break;
																								case "off":
																									i.cmManager.display = !1, i.cmManager.clear(), i.cmManager.stopTimer();
																									break;
																								case "on":
																									i.cmManager.display = !0, i.cmManager.startTimer();
																									break;
																								case "cls":
																								case "clear":
																									null !== i.cmManager && i.cmManager.clear();
																									break;
																								case "pp":
																								case "pause":
																									i.video.pause();
																									break;
																								case "p":
																								case "play":
																									i.video.play();
																									break;
																								case "vol":
																								case "volume":
																									if (0 == t.length) {
																										i.createPopup("目前音量：" + Math.round(100 * i.video.volume) + "%", 2e3)
																									} else {
																										var l = parseInt(t[0]);
																										null !== l && 0 / 0 !== l && (i.video.volume = Math.max(Math.min(l, 100), 0) / 100), i.createPopup("目前音量：" + Math.round(100 * i.video.volume) + "%", 2e3)
																									}
																								}
																								this.value = ""
																							}
																						} else if (null != e && 38 === e.keyCode) if (e.shiftKey) {
																							if (null !== i.cmManager) {
																								var s = Math.min(Math.round(100 * i.cmManager.options.opacity) + 5, 100);
																								i.cmManager.options.opacity = s / 100, i.removePopup(); {
																									i.createPopup("弹幕透明度：" + Math.round(s) + "%", 800)
																								}
																							}
																						} else {
																							i.video.volume = Math.round(Math.min(100 * i.video.volume + 5, 100)) / 100, i.removePopup(); {
																								i.createPopup("目前音量：" + Math.round(100 * i.video.volume) + "%", 800)
																							}
																						} else if (null != e && 40 === e.keyCode) if (e.shiftKey) {
																							if (null !== i.cmManager) {
																								var s = Math.max(Math.round(100 * i.cmManager.options.opacity) - 5, 0);
																								i.cmManager.options.opacity = s / 100, i.removePopup(); {
																									i.createPopup("弹幕透明度：" + Math.round(s) + "%", 800)
																								}
																							}
																						} else {
																							i.video.volume = Math.round(Math.max(100 * i.video.volume - 5, 0)) / 100, i.removePopup(); {
																								i.createPopup("目前音量：" + Math.round(100 * i.video.volume) + "%", 800)
																							}
																						}
																					}), "undefined" != typeof CommentManager && i.state.autosize) {
																						var G = function() {
																								if (0 !== v.videoHeight && 0 !== v.videoWidth) {
																									var t = v.videoHeight / v.videoWidth,
																										n = e.offsetWidth,
																										a = e.offsetHeight,
																										o = a / n;
																									t > o ? (e.style.width = a / t + "px", e.style.height = a + "px") : (e.style.width = n + "px", e.style.height = n * t + "px"), i.cmManager.setBounds()
																								}
																							};
																						v.addEventListener("loadedmetadata", G), G()
																					}
																					return i
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}();
